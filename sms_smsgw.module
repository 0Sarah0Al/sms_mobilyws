<?php

/**
 * @file
 * Adds support for sending SMS messages using the SMSgw.net gateway.
 */

/**
 * Implementation of hook_gateway_info().
 */
function sms_smsgw_gateway_info() {
  return array(
    'smsgw' => array(
      'name' => 'SMSgw.net',
      'configure form' => 'sms_smsgw_admin_form',
      'send' => 'sms_smsgw_send',
      'send form' => 'sms_smsgw_send_form',
    ),
  );
}

/**
 * Configuration form for gateway module.
 */
function sms_smsgw_admin_form($configuration) {

  $sms_status = _get_smsgw_status();
  $form['sms_smsgw_status'] = array(
    '#type' => 'textfield',
    '#title' => t('SMSgw.net Serivce Status'),
    '#default_value' => $sms_status['message'],
    '#description' => t('!SMSgw.net serivce availability.', array(
      '!SMSgw.net' => '<a target="_blank" href="http://SMSgw.net">SMSgw.net</a>',
    )),
    '#size' => 30,
    '#disabled' => TRUE,
    '#maxlength' => 64,
    '#required' => FALSE,
  );

  $sms_balance = sms_smsgw_balance();
  $form['sms_smsgw_balance'] = array(
    '#type' => 'textfield',
    '#title' => t('Your Balance'),
    '#default_value' => $sms_balance['balance'],
    '#description' => t('The current balance of your !SMSgw.net gateway account.', array(
      '!SMSgw.net' => '<a target="_blank" href="http://SMSgw.net">SMSgw.net</a>',
    )) . ' <br /><strong>' . $sms_balance['message'] . '</strong>',
    '#size' => 30,
    '#disabled' => TRUE,
    '#maxlength' => 64,
    '#required' => FALSE,
  );

  $form['sms_smsgw_sender'] = array(
    '#type' => 'textfield',
    '#title' => t('Sender'),
    '#description' => t('The sender (tagname) name of your !SMSgw.net gateway account.', array(
      '!SMSgw.net' => '<a target="_blank" href="http://SMSgw.net">SMSgw.net</a>',
    )),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => (isset($configuration) && isset($configuration['sms_smsgw_sender'])) ? $configuration['sms_smsgw_sender'] : '',
  );

  $form['sms_smsgw_user'] = array(
    '#type' => 'textfield',
    '#title' => t('User'),
    '#description' => t('The username of your !SMSgw.net gateway account.', array(
      '!SMSgw.net' => '<a target="_blank" href="http://SMSgw.net">SMSgw.net</a>',
    )),
    '#size' => 40,
    '#maxlength' => 255,
    '#default_value' => (isset($configuration) && isset($configuration['sms_smsgw_user'])) ? $configuration['sms_smsgw_user'] : '',
  );

  $form['sms_smsgw_password'] = array(
    '#type' => 'textfield',
    '#title' => t('Password'),
    '#description' => t('The password of your !SMSgw.net gateway account.', array(
      '!SMSgw.net' => '<a target="_blank" href="http://SMSgw.net">SMSgw.net</a>',
    )),
    '#size' => 30,
    '#maxlength' => 64,
    '#default_value' => (isset($configuration) && isset($configuration['sms_smsgw_password'])) ? $configuration['sms_smsgw_password'] : '',
  );

  return $form;
}

/**
 * Callback for sending messages.
 */
function sms_smsgw_send($number, $message, $options) {

  $gateway = sms_gateways('gateway', 'smsgw');
  $config = $gateway['configuration'];

  $url = "http://api.smsgw.net/SendSingleSMS";
  $sendr = $config['sms_smsgw_sender'];
  $sender = urlencode($sendr);

  $string_to_post = array(
            'strUserName' => $config['sms_smsgw_user'],
            'strPassword' => $config['sms_smsgw_password'],
            'strTagName'  => $sendr,
            'strRecepientNumber'  => $options['country'] . $number,
            'strMessage'  => $message,
        );

  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_HEADER, 0);
  curl_setopt($ch, CURLOPT_TIMEOUT, 5);
  curl_setopt($ch, CURLOPT_POST, 1);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $string_to_post);

  $result = curl_exec($ch);

  return $result;
}


/**
 * Get the balance of your account.
 */
function sms_smsgw_balance() {

  $gateway = sms_gateways('gateway', 'smsgw');

  // Check if gateway configuration is already defined or not.
  if(empty($gateway['configuration']) || empty($gateway['configuration']['sms_smsgw_user']) || empty($gateway['configuration']['sms_smsgw_password'])){
    $responsArray['status'] = '3'; // There is no configuration yet.
    $responsArray['total'] = '0';
    $responsArray['balance'] = '0';
    $responsArray['message'] = t('Please save your @provider configurations so you can see your balance.', array('@provider'=>t('SMSgw.net')));
    return $responsArray;
  }

  $config = $gateway['configuration'];

  $url = "http://api.smsgw.net/GetCredit";
  $string_to_post = array(
    'strUserName' => $config['sms_smsgw_user'],
    'strPassword' => $config['sms_smsgw_password'],
    );
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_HEADER, 0);
  curl_setopt($ch, CURLOPT_TIMEOUT, 5);
  curl_setopt($ch, CURLOPT_POST, 1);
  curl_setopt($ch, CURLOPT_POSTFIELDS, $string_to_post);
  $result = curl_exec($ch);

  if ($result) {
    $responsArray['status'] = '1'; // Successful.
    $responsArray['balance'] = $result;
    $responsArray['message'] = t('Your current balance is @balance points', array('@balance' => $result));
    return $responsArray;
  }

  $responsArray['status'] = '2'; // Response structure is not correct.
  $responsArray['total'] = '0';
  $responsArray['balance'] = '0';
  $responsArray['message'] = t('Response structure is not correct. Please contact support team.');
  return $responsArray;
}

/**
 * Get the Availablity of your account.
 */
function _get_smsgw_status() {

  global $send_status;

  $get_status = file_get_contents('http://api.smsgw.net/IsServiceAlive');

  // SMSGW.net returns TRUE if available FALSE for unavailable.
  if(isset($get_status)){
  // IF the status is FALSE.
    if($get_status == FALSE){
    $responsArray['status'] = 0; // Response structure is not correct.
    $responsArray['message'] = t('Unavailable');
    return $responsArray;
    } // IF the status is TRUE.
    elseif ($get_status == TRUE) {
    $responsArray['status'] = 1; // Response structure is correct.
    $responsArray['message'] = t('Available');
    return $responsArray;
  }
  else {
  // If the result is not valid we will return the error status.
  $responsArray['status'] = 2; // Response structure is not correct.
  $responsArray['message'] = t('An error occurred.');
  return $responsArray;
  }
}
}

/**
 * Returns custom additions to be added to the send forms.
 */
function sms_smsgw_send_form() {
  $form['country'] = array(
    '#type' => 'select',
    '#title' => t('Country'),
    '#multiple' => FALSE,
    '#options' => sms_country_codes(),
    '#default_value' => -1,
  );

  return $form;
}
